const font2 = {
  a: 'üÖê', b: 'üÖë', c: 'üÖí', d: 'üÖì', e: 'üÖî', f: 'üÖï', g: 'üÖñ',
  h: 'üÖó', i: 'üÖò', j: 'üÖô', k: 'üÖö', l: 'üÖõ', m: 'üÖú', n: 'üÖù',
  o: 'üÖû', p: 'üÖü', q: 'üÖ†', r: 'üÖ°', s: 'üÖ¢', t: 'üÖ£', u: 'üÖ§',
  v: 'üÖ•', w: 'üÖ¶', x: 'üÖß', y: 'üÖ®', z: 'üÖ©'
}

const handler = async (m, { conn, text }) => {
  if (!text || !text.includes('|')) {
    return m.reply(`${emojis} *Formato incorrecto.*\nUsa:\n.reactch enlace | Texto personalizado`)
  }

  let [link, ...messageParts] = text.split('|')
  link = link.trim()
  const msg = messageParts.join('|').trim().toLowerCase()

  if (!/^https:\/\/whatsapp\.com\/channel\/[a-zA-Z0-9]+\/[0-9]+$/.test(link)) {
    return m.reply(`${emojis} *Enlace inv√°lido.*\nDebe tener el formato: https://whatsapp.com/channel/<id>/<mensajeId>`)
  }

  const emoji = msg.split('').map(c => c === ' ' ? '‚Äï' : (font2[c] || c)).join('')

  try {
    const parts = link.split('/')
    const channelId = parts[4]
    const messageId = parts[5]

    const res = await conn.newsletterMetadata('invite', channelId)
    await conn.newsletterReactMessage(res.id, messageId, emoji)

    m.reply(`${emojis} *Reacci√≥n enviada exitosamente.*\nTexto: *${emoji}*\nCanal: *${res.name}*`)
  } catch (e) {
    console.error(e)
    m.reply(`${emojis} *Error:* No se pudo reaccionar al mensaje.\nVerifica el enlace, el ID del mensaje y tu conexi√≥n.`)
  }
}

handler.command = ['reactch', 'rch']
handler.tags = ['tools']
handler.help = ['reactch <link>|<texto>']
handler.owner = true

export default handler